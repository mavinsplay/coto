# for docker: /etc/nginx/user_conf.d/coto.conf
server {
    listen 80;
    server_name cotoo.ru www.cotoo.ru;

    # ---- большие файлы ----
    # разрешаем до 60G (укажите нужный вам лимит; 50G у вас в original — можно оставить)
    client_max_body_size 60G;

    # увеличенные таймауты — загрузка больших файлов может занимать долгое время
    client_body_timeout 3600s;
    send_timeout 3600s;
    keepalive_timeout 120s;

    # путь для временных файлов тела запроса (монтируйте этот каталог на хосте и убедитесь, что места достаточно)
    client_body_temp_path /var/lib/nginx/body 1 2;

    # минимальный буфер — тело сразу пишется в файл при необходимости
    client_body_buffer_size 128k;

    # ---- ACME (letsencrypt) ----
    # Обязательно ДО proxy_pass: certbot использует webroot (обычно /var/www/letsencrypt)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        # Если файл есть — отдадим, иначе 404 (certbot создаёт файл)
        try_files $uri =404;
        access_log off;
        log_not_found off;
        # важно: certbot ожидает текстовое содержимое
        default_type "text/plain";
    }

    # ---- static / media ----
    location /static/ {
        alias /coto/static/;
        expires 7d;
        add_header Cache-Control "public" always;
    }

    location /media/ {
        alias /coto/media/;
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Headers "Range,Content-Type" always;
        add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
        add_header Cache-Control "no-cache" always;
    }

    # ---- основной прокси (Django/gunicorn) ----
    location / {
        # CORS для API / загрузок
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Range" always;
        add_header Access-Control-Max-Age 1728000 always;

        if ($request_method = OPTIONS) {
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }

        # НЕ буферизуем тело запроса в памяти — будем стримить на upstream (важно для больших файлов)
        proxy_request_buffering off;
        proxy_buffering off;

        proxy_pass http://coto:8000;
        proxy_http_version 1.1;

        # Передаём необходимые заголовки
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # увеличенные таймауты для проксирования
        proxy_connect_timeout 120s;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;

        # логи
        access_log /var/log/nginx/django_access.log;
        error_log /var/log/nginx/django_error.log;
    }
}
